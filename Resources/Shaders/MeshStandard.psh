struct PointLight
{
	float3 position;
	float radius;
	float3 color;
	float intensity;
};

StructuredBuffer<PointLight> pointLightBuffer : register(t0);
Texture3D<uint> pointLightCluster : register(t1);

struct Input
{
	float4 position : SV_POSITION;
	float3 normal : NORMAL;
	float2 texCoord : TEXCOORD0;
};

struct Output
{
	float4 color : SV_TARGET0;
	float4 normal : SV_TARGET1;
};

[earlydepthstencil]
Output main(Input input)
{
	Output output = (Output)0;
	
	float3 diffuse = dot(input.normal, normalize(float3(1.0f, 1.0f, 1.0f))).xxx;
	
	output.color = float4(diffuse * saturate(input.normal * 0.5f + 0.5f.xxx), 1.0f);
	
	output.normal = float4(input.normal, 1.0f);
	
	return output;
}
